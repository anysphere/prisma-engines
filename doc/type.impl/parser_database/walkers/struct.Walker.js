(function() {var type_impls = {
"parser_database":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Walker%3C'db,+I%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parser_database/walkers.rs.html#37-42\">source</a><a href=\"#impl-Walker%3C'db,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'db, I&gt; <a class=\"struct\" href=\"parser_database/walkers/struct.Walker.html\" title=\"struct parser_database::walkers::Walker\">Walker</a>&lt;'db, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.walk\" class=\"method\"><a class=\"src rightside\" href=\"src/parser_database/walkers.rs.html#39-41\">source</a><h4 class=\"code-header\">pub fn <a href=\"parser_database/walkers/struct.Walker.html#tymethod.walk\" class=\"fn\">walk</a>&lt;J&gt;(self, other: J) -&gt; <a class=\"struct\" href=\"parser_database/walkers/struct.Walker.html\" title=\"struct parser_database::walkers::Walker\">Walker</a>&lt;'db, J&gt;</h4></section></summary><div class=\"docblock\"><p>Traverse something else in the same schema.</p>\n</div></details></div></details>",0,"parser_database::walkers::composite_type::CompositeTypeWalker","parser_database::walkers::composite_type::CompositeTypeFieldWalker","parser_database::walkers::enum::EnumWalker","parser_database::walkers::enum::EnumValueWalker","parser_database::walkers::field::FieldWalker","parser_database::walkers::model::ModelWalker","parser_database::walkers::relation::implicit_many_to_many::ImplicitManyToManyRelationWalker","parser_database::walkers::relation::RelationWalker","parser_database::walkers::relation_field::RelationFieldWalker","parser_database::walkers::scalar_field::ScalarFieldWalker"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Walker%3C'db,+I%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parser_database/walkers.rs.html#29\">source</a><a href=\"#impl-Clone-for-Walker%3C'db,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'db, I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"parser_database/walkers/struct.Walker.html\" title=\"struct parser_database::walkers::Walker\">Walker</a>&lt;'db, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parser_database/walkers.rs.html#29\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"parser_database/walkers/struct.Walker.html\" title=\"struct parser_database::walkers::Walker\">Walker</a>&lt;'db, I&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","parser_database::walkers::composite_type::CompositeTypeWalker","parser_database::walkers::composite_type::CompositeTypeFieldWalker","parser_database::walkers::enum::EnumWalker","parser_database::walkers::enum::EnumValueWalker","parser_database::walkers::field::FieldWalker","parser_database::walkers::model::ModelWalker","parser_database::walkers::relation::implicit_many_to_many::ImplicitManyToManyRelationWalker","parser_database::walkers::relation::RelationWalker","parser_database::walkers::relation_field::RelationFieldWalker","parser_database::walkers::scalar_field::ScalarFieldWalker"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Walker%3C'db,+I%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parser_database/walkers.rs.html#44-52\">source</a><a href=\"#impl-PartialEq-for-Walker%3C'db,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'db, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"parser_database/walkers/struct.Walker.html\" title=\"struct parser_database::walkers::Walker\">Walker</a>&lt;'db, I&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parser_database/walkers.rs.html#49-51\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","parser_database::walkers::composite_type::CompositeTypeWalker","parser_database::walkers::composite_type::CompositeTypeFieldWalker","parser_database::walkers::enum::EnumWalker","parser_database::walkers::enum::EnumValueWalker","parser_database::walkers::field::FieldWalker","parser_database::walkers::model::ModelWalker","parser_database::walkers::relation::implicit_many_to_many::ImplicitManyToManyRelationWalker","parser_database::walkers::relation::RelationWalker","parser_database::walkers::relation_field::RelationFieldWalker","parser_database::walkers::scalar_field::ScalarFieldWalker"],["<section id=\"impl-Copy-for-Walker%3C'db,+I%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parser_database/walkers.rs.html#29\">source</a><a href=\"#impl-Copy-for-Walker%3C'db,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'db, I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"parser_database/walkers/struct.Walker.html\" title=\"struct parser_database::walkers::Walker\">Walker</a>&lt;'db, I&gt;</h3></section>","Copy","parser_database::walkers::composite_type::CompositeTypeWalker","parser_database::walkers::composite_type::CompositeTypeFieldWalker","parser_database::walkers::enum::EnumWalker","parser_database::walkers::enum::EnumValueWalker","parser_database::walkers::field::FieldWalker","parser_database::walkers::model::ModelWalker","parser_database::walkers::relation::implicit_many_to_many::ImplicitManyToManyRelationWalker","parser_database::walkers::relation::RelationWalker","parser_database::walkers::relation_field::RelationFieldWalker","parser_database::walkers::scalar_field::ScalarFieldWalker"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()