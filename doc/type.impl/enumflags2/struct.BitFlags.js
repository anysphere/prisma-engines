(function() {var type_impls = {
"psl":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#447-449\">source</a><a href=\"#impl-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#454\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits\" class=\"fn\">from_bits</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>BitFlags&lt;T&gt;</code> if the raw value provided does not contain\nany illegal flags.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits_truncate\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#470\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits_truncate\" class=\"fn\">from_bits_truncate</a>(bits: &lt;T as RawBitFlags&gt;::Numeric) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>BitFlags&lt;T&gt;</code> from an underlying bitwise value. If any\ninvalid bits are set, ignore them.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#487\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits_unchecked\" class=\"fn\">from_bits_unchecked</a>(\n    val: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new BitFlags unsafely, without checking if the bits form\na valid bit pattern for the type.</p>\n<p>Consider using <a href=\"enumflags2/struct.BitFlags.html#method.from_bits\" title=\"associated function enumflags2::BitFlags::from_bits\"><code>from_bits</code></a>\nor <a href=\"enumflags2/struct.BitFlags.html#method.from_bits_truncate\" title=\"associated function enumflags2::BitFlags::from_bits_truncate\"><code>from_bits_truncate</code></a> instead.</p>\n<h5 id=\"safety\"><a href=\"#safety\">Safety</a></h5>\n<p>All bits set in <code>val</code> must correspond to a value of the enum.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_flag\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#497\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_flag\" class=\"fn\">from_flag</a>(flag: T) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Turn a <code>T</code> into a <code>BitFlags&lt;T&gt;</code>. Also available as <code>flag.into()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#526\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.empty\" class=\"fn\">empty</a>() -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>BitFlags</code> with no flags set (in other words, with a value of <code>0</code>).</p>\n<p>See also: <a href=\"enumflags2/trait.BitFlag.html#method.empty\" title=\"associated function enumflags2::BitFlag::empty\"><code>BitFlag::empty</code></a>, a convenience reexport;\n<a href=\"enumflags2/struct.BitFlags.html#associatedconstant.EMPTY\" title=\"associated constant enumflags2::BitFlags::EMPTY\"><code>BitFlags::EMPTY</code></a>, the same functionality available\nas a constant for <code>const fn</code> code.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy, PartialEq, Eq)]\n</span><span class=\"kw\">enum </span>MyFlag {\n    One = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Two = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n    Three = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">2</span>,\n}\n\n<span class=\"kw\">let </span>empty: BitFlags&lt;MyFlag&gt; = BitFlags::empty();\n<span class=\"macro\">assert!</span>(empty.is_empty());\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::One), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::Two), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::Three), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#554\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.all\" class=\"fn\">all</a>() -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>BitFlags</code> with all flags set.</p>\n<p>See also: <a href=\"enumflags2/trait.BitFlag.html#method.all\" title=\"associated function enumflags2::BitFlag::all\"><code>BitFlag::all</code></a>, a convenience reexport;\n<a href=\"enumflags2/struct.BitFlags.html#associatedconstant.ALL\" title=\"associated constant enumflags2::BitFlags::ALL\"><code>BitFlags::ALL</code></a>, the same functionality available\nas a constant for <code>const fn</code> code.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy, PartialEq, Eq)]\n</span><span class=\"kw\">enum </span>MyFlag {\n    One = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Two = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n    Three = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">2</span>,\n}\n\n<span class=\"kw\">let </span>empty: BitFlags&lt;MyFlag&gt; = BitFlags::all();\n<span class=\"macro\">assert!</span>(empty.is_all());\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::One), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::Two), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::Three), <span class=\"bool-val\">true</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.EMPTY\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#560\">source</a><h4 class=\"code-header\">pub const <a href=\"enumflags2/struct.BitFlags.html#associatedconstant.EMPTY\" class=\"constant\">EMPTY</a>: <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; = _</h4></section></summary><div class=\"docblock\"><p>An empty <code>BitFlags</code>. Equivalent to <a href=\"enumflags2/struct.BitFlags.html#method.empty\" title=\"associated function enumflags2::BitFlags::empty\"><code>empty()</code></a>,\nbut works in a const context.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ALL\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#567\">source</a><h4 class=\"code-header\">pub const <a href=\"enumflags2/struct.BitFlags.html#associatedconstant.ALL\" class=\"constant\">ALL</a>: <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; = _</h4></section></summary><div class=\"docblock\"><p>A <code>BitFlags</code> with all flags set. Equivalent to <a href=\"enumflags2/struct.BitFlags.html#method.all\" title=\"associated function enumflags2::BitFlags::all\"><code>all()</code></a>,\nbut works in a const context.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.CONST_TOKEN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#573\">source</a><h4 class=\"code-header\">pub const <a href=\"enumflags2/struct.BitFlags.html#associatedconstant.CONST_TOKEN\" class=\"constant\">CONST_TOKEN</a>: <a class=\"struct\" href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\">ConstToken</a>&lt;T, &lt;T as RawBitFlags&gt;::Numeric&gt; = _</h4></section></summary><div class=\"docblock\"><p>A <a href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\"><code>ConstToken</code></a> for this type of flag.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_all\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#577\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.is_all\" class=\"fn\">is_all</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if all flags are set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#583\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if no flag is set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#589\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.len\" class=\"fn\">len</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of flags set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exactly_one\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#597\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.exactly_one\" class=\"fn\">exactly_one</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>If exactly one flag is set, the flag is returned. Otherwise, returns <code>None</code>.</p>\n<p>See also <a href=\"https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.exactly_one\"><code>Itertools::exactly_one</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bits\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#623\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.bits\" class=\"fn\">bits</a>(self) -&gt; &lt;T as RawBitFlags&gt;::Numeric</h4></section></summary><div class=\"docblock\"><p>Returns the underlying bitwise value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy)]\n</span><span class=\"kw\">enum </span>Flags {\n    Foo = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Bar = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n}\n\n<span class=\"kw\">let </span>both_flags = Flags::Foo | Flags::Bar;\n<span class=\"macro\">assert_eq!</span>(both_flags.bits(), <span class=\"number\">0b11</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersects\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#629\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.intersects\" class=\"fn\">intersects</a>&lt;B&gt;(self, other: B) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a><span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Returns true if at least one flag is shared.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#635\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.contains\" class=\"fn\">contains</a>&lt;B&gt;(self, other: B) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a><span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Returns true if all flags are contained.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#642\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.toggle\" class=\"fn\">toggle</a>&lt;B&gt;(&amp;mut self, other: B)<span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Toggles the matching bits</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#648\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.insert\" class=\"fn\">insert</a>&lt;B&gt;(&amp;mut self, other: B)<span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Inserts the flags into the BitFlag</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#654\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.remove\" class=\"fn\">remove</a>&lt;B&gt;(&amp;mut self, other: B)<span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Removes the matching flags</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#660\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.iter\" class=\"fn\">iter</a>(self) -&gt; <a class=\"struct\" href=\"enumflags2/struct.Iter.html\" title=\"struct enumflags2::Iter\">Iter</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator that yields each set flag</p>\n</div></details></div></details>",0,"psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitFlags%3CT,+u8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><a href=\"#impl-BitFlags%3CT,+u8%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits_unchecked_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits_unchecked_c\" class=\"fn\">from_bits_unchecked_c</a>(\n    val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>,\n    const_token: <a class=\"struct\" href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\">ConstToken</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new BitFlags unsafely, without checking if the bits form\na valid bit pattern for the type.</p>\n<p>Const variant of\n<a href=\"enumflags2/struct.BitFlags.html#method.from_bits_unchecked\" title=\"associated function enumflags2::BitFlags::from_bits_unchecked\"><code>from_bits_unchecked</code></a>.</p>\n<p>Consider using\n<a href=\"enumflags2/struct.BitFlags.html#method.from_bits_truncate_c\" title=\"associated function enumflags2::BitFlags::from_bits_truncate_c\"><code>from_bits_truncate_c</code></a> instead.</p>\n<h5 id=\"safety\"><a href=\"#safety\">Safety</a></h5>\n<p>All bits set in <code>val</code> must correspond to a value of the enum.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits_truncate_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits_truncate_c\" class=\"fn\">from_bits_truncate_c</a>(\n    bits: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>,\n    const_token: <a class=\"struct\" href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\">ConstToken</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>BitFlags&lt;T&gt;</code> from an underlying bitwise value. If any\ninvalid bits are set, ignore them.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy, Debug, PartialEq, Eq)]\n</span><span class=\"kw\">enum </span>MyFlag {\n    One = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Two = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n    Three = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">2</span>,\n}\n\n<span class=\"kw\">const </span>FLAGS: BitFlags&lt;MyFlag&gt; =\n    BitFlags::&lt;MyFlag&gt;::from_bits_truncate_c(<span class=\"number\">0b10101010</span>, BitFlags::CONST_TOKEN);\n<span class=\"macro\">assert_eq!</span>(FLAGS, MyFlag::Two);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.union_c\" class=\"fn\">union_c</a>(self, other: <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Bitwise OR โ return value contains flag if either argument does.</p>\n<p>Also available as <code>a | b</code>, but operator overloads are not usable\nin <code>const fn</code>s at the moment.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.intersection_c\" class=\"fn\">intersection_c</a>(self, other: <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Bitwise AND โ return value contains flag if both arguments do.</p>\n<p>Also available as <code>a &amp; b</code>, but operator overloads are not usable\nin <code>const fn</code>s at the moment.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.not_c\" class=\"fn\">not_c</a>(self, const_token: <a class=\"struct\" href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\">ConstToken</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Bitwise NOT โ return value contains flag if argument doesnโt.</p>\n<p>Also available as <code>!a</code>, but operator overloads are not usable\nin <code>const fn</code>s at the moment.</p>\n<p>Moreover, due to <code>const fn</code> limitations, <code>not_c</code> needs a\n<a href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\"><code>ConstToken</code></a> as an argument.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy, Debug, PartialEq, Eq)]\n</span><span class=\"kw\">enum </span>MyFlag {\n    One = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Two = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n    Three = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">2</span>,\n}\n\n<span class=\"kw\">const </span>FLAGS: BitFlags&lt;MyFlag&gt; = <span class=\"macro\">make_bitflags!</span>(MyFlag::{One | Two});\n<span class=\"kw\">const </span>NEGATED: BitFlags&lt;MyFlag&gt; = FLAGS.not_c(BitFlags::CONST_TOKEN);\n<span class=\"macro\">assert_eq!</span>(NEGATED, MyFlag::Three);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bits_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.bits_c\" class=\"fn\">bits_c</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns the underlying bitwise value.</p>\n<p><code>const</code> variant of <a href=\"enumflags2/struct.BitFlags.html#method.bits\" title=\"method enumflags2::BitFlags::bits\"><code>bits</code></a>.</p>\n</div></details></div></details>",0,"psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#46-49\">source</a><a href=\"#impl-Binary-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#51\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#877-880\">source</a><a href=\"#impl-BitOr%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#884\">source</a><a href=\"#method.bitor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: B) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<B>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#76-79\">source</a><a href=\"#impl-UpperHex-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#81\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#977-980\">source</a><a href=\"#impl-Extend%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#983-985\">source</a><a href=\"#method.extend\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, it: I)<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = B&gt;,</span></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.75.0/src/core/iter/traits/collect.rs.html#376\">source</a><a href=\"#method.extend_one\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.75.0/src/core/iter/traits/collect.rs.html#384\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<B>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#930-933\">source</a><a href=\"#impl-BitAndAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#936\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: B)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<B>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#420-422\">source</a><a href=\"#impl-Default-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"docblock\"><p>The default value returned is one with all flags unset, i. e. <a href=\"enumflags2/struct.BitFlags.html#method.empty\" title=\"associated function enumflags2::BitFlags::empty\"><code>empty</code></a>,\nunless <a href=\"index.html#customizing-default\">customized</a>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#425\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the โdefault valueโ for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#667\">source</a><a href=\"#impl-IntoIterator-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"enumflags2/struct.Iter.html\" title=\"struct enumflags2::Iter\">Iter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#671\">source</a><a href=\"#method.into_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#951-953\">source</a><a href=\"#impl-Not-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#957\">source</a><a href=\"#method.not\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#891-894\">source</a><a href=\"#impl-BitAnd%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#898\">source</a><a href=\"#method.bitand\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: B) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<B>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#1013-1016\">source</a><a href=\"#impl-Serialize-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#1018\">source</a><a href=\"#method.serialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    s: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#919-922\">source</a><a href=\"#impl-BitOrAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#925\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: B)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<B>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu8%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu8%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u8>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu128%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu128%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u128>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu16%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu16%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u16>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu64%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu64%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u64>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu32%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu32%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u32>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#433\">source</a><a href=\"#impl-From%3CT%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#435\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<T>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#940-943\">source</a><a href=\"#impl-BitXorAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#946\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: B)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<B>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<section id=\"impl-Copy-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#impl-Copy-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</span></h3></section>","Copy","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#905-908\">source</a><a href=\"#impl-BitXor%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#912\">source</a><a href=\"#method.bitxor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: B) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<B>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#852\">source</a><a href=\"#impl-PartialEq-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#854\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CT%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#867-869\">source</a><a href=\"#impl-PartialEq%3CT%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;T&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#872\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<T>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#56-59\">source</a><a href=\"#impl-Octal-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#61\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#37-39\">source</a><a href=\"#impl-Display-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#41\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#66-69\">source</a><a href=\"#impl-LowerHex-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#71\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<section id=\"impl-Eq-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#impl-Eq-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</span></h3></section>","Eq","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#4-6\">source</a><a href=\"#impl-Debug-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#8\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'a%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#997-1000\">source</a><a href=\"#impl-Deserialize%3C'a%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'a&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#1002\">source</a><a href=\"#method.deserialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(d: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'a&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'a>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#impl-Clone-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#860\">source</a><a href=\"#impl-Hash-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#862\">source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<section id=\"impl-StructuralEq-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#impl-StructuralEq-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;</h3></section>","StructuralEq","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#962-965\">source</a><a href=\"#impl-FromIterator%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#968-970\">source</a><a href=\"#method.from_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(it: I) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = B&gt;,</span></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<B>","psl::datamodel_connector::ConnectorCapabilities","psl::PreviewFeatures"]],
"psl_core":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#447-449\">source</a><a href=\"#impl-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#454\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits\" class=\"fn\">from_bits</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>BitFlags&lt;T&gt;</code> if the raw value provided does not contain\nany illegal flags.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits_truncate\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#470\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits_truncate\" class=\"fn\">from_bits_truncate</a>(bits: &lt;T as RawBitFlags&gt;::Numeric) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>BitFlags&lt;T&gt;</code> from an underlying bitwise value. If any\ninvalid bits are set, ignore them.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#487\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits_unchecked\" class=\"fn\">from_bits_unchecked</a>(\n    val: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new BitFlags unsafely, without checking if the bits form\na valid bit pattern for the type.</p>\n<p>Consider using <a href=\"enumflags2/struct.BitFlags.html#method.from_bits\" title=\"associated function enumflags2::BitFlags::from_bits\"><code>from_bits</code></a>\nor <a href=\"enumflags2/struct.BitFlags.html#method.from_bits_truncate\" title=\"associated function enumflags2::BitFlags::from_bits_truncate\"><code>from_bits_truncate</code></a> instead.</p>\n<h5 id=\"safety\"><a href=\"#safety\">Safety</a></h5>\n<p>All bits set in <code>val</code> must correspond to a value of the enum.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_flag\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#497\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_flag\" class=\"fn\">from_flag</a>(flag: T) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Turn a <code>T</code> into a <code>BitFlags&lt;T&gt;</code>. Also available as <code>flag.into()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#526\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.empty\" class=\"fn\">empty</a>() -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>BitFlags</code> with no flags set (in other words, with a value of <code>0</code>).</p>\n<p>See also: <a href=\"enumflags2/trait.BitFlag.html#method.empty\" title=\"associated function enumflags2::BitFlag::empty\"><code>BitFlag::empty</code></a>, a convenience reexport;\n<a href=\"enumflags2/struct.BitFlags.html#associatedconstant.EMPTY\" title=\"associated constant enumflags2::BitFlags::EMPTY\"><code>BitFlags::EMPTY</code></a>, the same functionality available\nas a constant for <code>const fn</code> code.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy, PartialEq, Eq)]\n</span><span class=\"kw\">enum </span>MyFlag {\n    One = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Two = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n    Three = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">2</span>,\n}\n\n<span class=\"kw\">let </span>empty: BitFlags&lt;MyFlag&gt; = BitFlags::empty();\n<span class=\"macro\">assert!</span>(empty.is_empty());\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::One), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::Two), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::Three), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#554\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.all\" class=\"fn\">all</a>() -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>BitFlags</code> with all flags set.</p>\n<p>See also: <a href=\"enumflags2/trait.BitFlag.html#method.all\" title=\"associated function enumflags2::BitFlag::all\"><code>BitFlag::all</code></a>, a convenience reexport;\n<a href=\"enumflags2/struct.BitFlags.html#associatedconstant.ALL\" title=\"associated constant enumflags2::BitFlags::ALL\"><code>BitFlags::ALL</code></a>, the same functionality available\nas a constant for <code>const fn</code> code.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy, PartialEq, Eq)]\n</span><span class=\"kw\">enum </span>MyFlag {\n    One = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Two = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n    Three = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">2</span>,\n}\n\n<span class=\"kw\">let </span>empty: BitFlags&lt;MyFlag&gt; = BitFlags::all();\n<span class=\"macro\">assert!</span>(empty.is_all());\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::One), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::Two), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::Three), <span class=\"bool-val\">true</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.EMPTY\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#560\">source</a><h4 class=\"code-header\">pub const <a href=\"enumflags2/struct.BitFlags.html#associatedconstant.EMPTY\" class=\"constant\">EMPTY</a>: <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; = _</h4></section></summary><div class=\"docblock\"><p>An empty <code>BitFlags</code>. Equivalent to <a href=\"enumflags2/struct.BitFlags.html#method.empty\" title=\"associated function enumflags2::BitFlags::empty\"><code>empty()</code></a>,\nbut works in a const context.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ALL\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#567\">source</a><h4 class=\"code-header\">pub const <a href=\"enumflags2/struct.BitFlags.html#associatedconstant.ALL\" class=\"constant\">ALL</a>: <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; = _</h4></section></summary><div class=\"docblock\"><p>A <code>BitFlags</code> with all flags set. Equivalent to <a href=\"enumflags2/struct.BitFlags.html#method.all\" title=\"associated function enumflags2::BitFlags::all\"><code>all()</code></a>,\nbut works in a const context.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.CONST_TOKEN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#573\">source</a><h4 class=\"code-header\">pub const <a href=\"enumflags2/struct.BitFlags.html#associatedconstant.CONST_TOKEN\" class=\"constant\">CONST_TOKEN</a>: <a class=\"struct\" href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\">ConstToken</a>&lt;T, &lt;T as RawBitFlags&gt;::Numeric&gt; = _</h4></section></summary><div class=\"docblock\"><p>A <a href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\"><code>ConstToken</code></a> for this type of flag.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_all\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#577\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.is_all\" class=\"fn\">is_all</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if all flags are set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#583\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if no flag is set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#589\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.len\" class=\"fn\">len</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of flags set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exactly_one\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#597\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.exactly_one\" class=\"fn\">exactly_one</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>If exactly one flag is set, the flag is returned. Otherwise, returns <code>None</code>.</p>\n<p>See also <a href=\"https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.exactly_one\"><code>Itertools::exactly_one</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bits\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#623\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.bits\" class=\"fn\">bits</a>(self) -&gt; &lt;T as RawBitFlags&gt;::Numeric</h4></section></summary><div class=\"docblock\"><p>Returns the underlying bitwise value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy)]\n</span><span class=\"kw\">enum </span>Flags {\n    Foo = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Bar = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n}\n\n<span class=\"kw\">let </span>both_flags = Flags::Foo | Flags::Bar;\n<span class=\"macro\">assert_eq!</span>(both_flags.bits(), <span class=\"number\">0b11</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersects\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#629\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.intersects\" class=\"fn\">intersects</a>&lt;B&gt;(self, other: B) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a><span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Returns true if at least one flag is shared.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#635\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.contains\" class=\"fn\">contains</a>&lt;B&gt;(self, other: B) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a><span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Returns true if all flags are contained.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#642\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.toggle\" class=\"fn\">toggle</a>&lt;B&gt;(&amp;mut self, other: B)<span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Toggles the matching bits</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#648\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.insert\" class=\"fn\">insert</a>&lt;B&gt;(&amp;mut self, other: B)<span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Inserts the flags into the BitFlag</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#654\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.remove\" class=\"fn\">remove</a>&lt;B&gt;(&amp;mut self, other: B)<span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Removes the matching flags</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#660\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.iter\" class=\"fn\">iter</a>(self) -&gt; <a class=\"struct\" href=\"enumflags2/struct.Iter.html\" title=\"struct enumflags2::Iter\">Iter</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator that yields each set flag</p>\n</div></details></div></details>",0,"psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitFlags%3CT,+u8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><a href=\"#impl-BitFlags%3CT,+u8%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits_unchecked_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits_unchecked_c\" class=\"fn\">from_bits_unchecked_c</a>(\n    val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>,\n    const_token: <a class=\"struct\" href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\">ConstToken</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new BitFlags unsafely, without checking if the bits form\na valid bit pattern for the type.</p>\n<p>Const variant of\n<a href=\"enumflags2/struct.BitFlags.html#method.from_bits_unchecked\" title=\"associated function enumflags2::BitFlags::from_bits_unchecked\"><code>from_bits_unchecked</code></a>.</p>\n<p>Consider using\n<a href=\"enumflags2/struct.BitFlags.html#method.from_bits_truncate_c\" title=\"associated function enumflags2::BitFlags::from_bits_truncate_c\"><code>from_bits_truncate_c</code></a> instead.</p>\n<h5 id=\"safety\"><a href=\"#safety\">Safety</a></h5>\n<p>All bits set in <code>val</code> must correspond to a value of the enum.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits_truncate_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits_truncate_c\" class=\"fn\">from_bits_truncate_c</a>(\n    bits: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>,\n    const_token: <a class=\"struct\" href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\">ConstToken</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>BitFlags&lt;T&gt;</code> from an underlying bitwise value. If any\ninvalid bits are set, ignore them.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy, Debug, PartialEq, Eq)]\n</span><span class=\"kw\">enum </span>MyFlag {\n    One = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Two = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n    Three = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">2</span>,\n}\n\n<span class=\"kw\">const </span>FLAGS: BitFlags&lt;MyFlag&gt; =\n    BitFlags::&lt;MyFlag&gt;::from_bits_truncate_c(<span class=\"number\">0b10101010</span>, BitFlags::CONST_TOKEN);\n<span class=\"macro\">assert_eq!</span>(FLAGS, MyFlag::Two);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.union_c\" class=\"fn\">union_c</a>(self, other: <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Bitwise OR โ return value contains flag if either argument does.</p>\n<p>Also available as <code>a | b</code>, but operator overloads are not usable\nin <code>const fn</code>s at the moment.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.intersection_c\" class=\"fn\">intersection_c</a>(self, other: <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Bitwise AND โ return value contains flag if both arguments do.</p>\n<p>Also available as <code>a &amp; b</code>, but operator overloads are not usable\nin <code>const fn</code>s at the moment.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.not_c\" class=\"fn\">not_c</a>(self, const_token: <a class=\"struct\" href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\">ConstToken</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Bitwise NOT โ return value contains flag if argument doesnโt.</p>\n<p>Also available as <code>!a</code>, but operator overloads are not usable\nin <code>const fn</code>s at the moment.</p>\n<p>Moreover, due to <code>const fn</code> limitations, <code>not_c</code> needs a\n<a href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\"><code>ConstToken</code></a> as an argument.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy, Debug, PartialEq, Eq)]\n</span><span class=\"kw\">enum </span>MyFlag {\n    One = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Two = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n    Three = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">2</span>,\n}\n\n<span class=\"kw\">const </span>FLAGS: BitFlags&lt;MyFlag&gt; = <span class=\"macro\">make_bitflags!</span>(MyFlag::{One | Two});\n<span class=\"kw\">const </span>NEGATED: BitFlags&lt;MyFlag&gt; = FLAGS.not_c(BitFlags::CONST_TOKEN);\n<span class=\"macro\">assert_eq!</span>(NEGATED, MyFlag::Three);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bits_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.bits_c\" class=\"fn\">bits_c</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns the underlying bitwise value.</p>\n<p><code>const</code> variant of <a href=\"enumflags2/struct.BitFlags.html#method.bits\" title=\"method enumflags2::BitFlags::bits\"><code>bits</code></a>.</p>\n</div></details></div></details>",0,"psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#46-49\">source</a><a href=\"#impl-Binary-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#51\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#877-880\">source</a><a href=\"#impl-BitOr%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#884\">source</a><a href=\"#method.bitor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: B) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<B>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#76-79\">source</a><a href=\"#impl-UpperHex-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#81\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#977-980\">source</a><a href=\"#impl-Extend%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#983-985\">source</a><a href=\"#method.extend\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, it: I)<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = B&gt;,</span></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.75.0/src/core/iter/traits/collect.rs.html#376\">source</a><a href=\"#method.extend_one\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.75.0/src/core/iter/traits/collect.rs.html#384\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<B>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#930-933\">source</a><a href=\"#impl-BitAndAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#936\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: B)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<B>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#420-422\">source</a><a href=\"#impl-Default-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"docblock\"><p>The default value returned is one with all flags unset, i. e. <a href=\"enumflags2/struct.BitFlags.html#method.empty\" title=\"associated function enumflags2::BitFlags::empty\"><code>empty</code></a>,\nunless <a href=\"index.html#customizing-default\">customized</a>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#425\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the โdefault valueโ for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#667\">source</a><a href=\"#impl-IntoIterator-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"enumflags2/struct.Iter.html\" title=\"struct enumflags2::Iter\">Iter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#671\">source</a><a href=\"#method.into_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#951-953\">source</a><a href=\"#impl-Not-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#957\">source</a><a href=\"#method.not\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#891-894\">source</a><a href=\"#impl-BitAnd%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#898\">source</a><a href=\"#method.bitand\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: B) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<B>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#1013-1016\">source</a><a href=\"#impl-Serialize-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#1018\">source</a><a href=\"#method.serialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    s: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#919-922\">source</a><a href=\"#impl-BitOrAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#925\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: B)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<B>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu8%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu8%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u8>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu128%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu128%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u128>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu16%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu16%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u16>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu64%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu64%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u64>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu32%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu32%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u32>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#433\">source</a><a href=\"#impl-From%3CT%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#435\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<T>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#940-943\">source</a><a href=\"#impl-BitXorAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#946\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: B)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<B>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<section id=\"impl-Copy-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#impl-Copy-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</span></h3></section>","Copy","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#905-908\">source</a><a href=\"#impl-BitXor%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#912\">source</a><a href=\"#method.bitxor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: B) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<B>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#852\">source</a><a href=\"#impl-PartialEq-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#854\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CT%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#867-869\">source</a><a href=\"#impl-PartialEq%3CT%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;T&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#872\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<T>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#56-59\">source</a><a href=\"#impl-Octal-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#61\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#37-39\">source</a><a href=\"#impl-Display-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#41\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#66-69\">source</a><a href=\"#impl-LowerHex-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#71\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<section id=\"impl-Eq-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#impl-Eq-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</span></h3></section>","Eq","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#4-6\">source</a><a href=\"#impl-Debug-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#8\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'a%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#997-1000\">source</a><a href=\"#impl-Deserialize%3C'a%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'a&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#1002\">source</a><a href=\"#method.deserialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(d: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'a&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'a>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#impl-Clone-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#860\">source</a><a href=\"#impl-Hash-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#862\">source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<section id=\"impl-StructuralEq-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#impl-StructuralEq-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;</h3></section>","StructuralEq","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#962-965\">source</a><a href=\"#impl-FromIterator%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#968-970\">source</a><a href=\"#method.from_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(it: I) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = B&gt;,</span></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<B>","psl_core::datamodel_connector::capabilities::ConnectorCapabilities","psl_core::common::preview_features::PreviewFeatures"]],
"query_engine":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#447-449\">source</a><a href=\"#impl-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#454\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits\" class=\"fn\">from_bits</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>BitFlags&lt;T&gt;</code> if the raw value provided does not contain\nany illegal flags.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits_truncate\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#470\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits_truncate\" class=\"fn\">from_bits_truncate</a>(bits: &lt;T as RawBitFlags&gt;::Numeric) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>BitFlags&lt;T&gt;</code> from an underlying bitwise value. If any\ninvalid bits are set, ignore them.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#487\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits_unchecked\" class=\"fn\">from_bits_unchecked</a>(\n    val: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new BitFlags unsafely, without checking if the bits form\na valid bit pattern for the type.</p>\n<p>Consider using <a href=\"enumflags2/struct.BitFlags.html#method.from_bits\" title=\"associated function enumflags2::BitFlags::from_bits\"><code>from_bits</code></a>\nor <a href=\"enumflags2/struct.BitFlags.html#method.from_bits_truncate\" title=\"associated function enumflags2::BitFlags::from_bits_truncate\"><code>from_bits_truncate</code></a> instead.</p>\n<h5 id=\"safety\"><a href=\"#safety\">Safety</a></h5>\n<p>All bits set in <code>val</code> must correspond to a value of the enum.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_flag\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#497\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_flag\" class=\"fn\">from_flag</a>(flag: T) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Turn a <code>T</code> into a <code>BitFlags&lt;T&gt;</code>. Also available as <code>flag.into()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#526\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.empty\" class=\"fn\">empty</a>() -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>BitFlags</code> with no flags set (in other words, with a value of <code>0</code>).</p>\n<p>See also: <a href=\"enumflags2/trait.BitFlag.html#method.empty\" title=\"associated function enumflags2::BitFlag::empty\"><code>BitFlag::empty</code></a>, a convenience reexport;\n<a href=\"enumflags2/struct.BitFlags.html#associatedconstant.EMPTY\" title=\"associated constant enumflags2::BitFlags::EMPTY\"><code>BitFlags::EMPTY</code></a>, the same functionality available\nas a constant for <code>const fn</code> code.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy, PartialEq, Eq)]\n</span><span class=\"kw\">enum </span>MyFlag {\n    One = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Two = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n    Three = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">2</span>,\n}\n\n<span class=\"kw\">let </span>empty: BitFlags&lt;MyFlag&gt; = BitFlags::empty();\n<span class=\"macro\">assert!</span>(empty.is_empty());\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::One), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::Two), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::Three), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#554\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.all\" class=\"fn\">all</a>() -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>BitFlags</code> with all flags set.</p>\n<p>See also: <a href=\"enumflags2/trait.BitFlag.html#method.all\" title=\"associated function enumflags2::BitFlag::all\"><code>BitFlag::all</code></a>, a convenience reexport;\n<a href=\"enumflags2/struct.BitFlags.html#associatedconstant.ALL\" title=\"associated constant enumflags2::BitFlags::ALL\"><code>BitFlags::ALL</code></a>, the same functionality available\nas a constant for <code>const fn</code> code.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy, PartialEq, Eq)]\n</span><span class=\"kw\">enum </span>MyFlag {\n    One = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Two = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n    Three = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">2</span>,\n}\n\n<span class=\"kw\">let </span>empty: BitFlags&lt;MyFlag&gt; = BitFlags::all();\n<span class=\"macro\">assert!</span>(empty.is_all());\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::One), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::Two), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(empty.contains(MyFlag::Three), <span class=\"bool-val\">true</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.EMPTY\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#560\">source</a><h4 class=\"code-header\">pub const <a href=\"enumflags2/struct.BitFlags.html#associatedconstant.EMPTY\" class=\"constant\">EMPTY</a>: <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; = _</h4></section></summary><div class=\"docblock\"><p>An empty <code>BitFlags</code>. Equivalent to <a href=\"enumflags2/struct.BitFlags.html#method.empty\" title=\"associated function enumflags2::BitFlags::empty\"><code>empty()</code></a>,\nbut works in a const context.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ALL\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#567\">source</a><h4 class=\"code-header\">pub const <a href=\"enumflags2/struct.BitFlags.html#associatedconstant.ALL\" class=\"constant\">ALL</a>: <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; = _</h4></section></summary><div class=\"docblock\"><p>A <code>BitFlags</code> with all flags set. Equivalent to <a href=\"enumflags2/struct.BitFlags.html#method.all\" title=\"associated function enumflags2::BitFlags::all\"><code>all()</code></a>,\nbut works in a const context.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.CONST_TOKEN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#573\">source</a><h4 class=\"code-header\">pub const <a href=\"enumflags2/struct.BitFlags.html#associatedconstant.CONST_TOKEN\" class=\"constant\">CONST_TOKEN</a>: <a class=\"struct\" href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\">ConstToken</a>&lt;T, &lt;T as RawBitFlags&gt;::Numeric&gt; = _</h4></section></summary><div class=\"docblock\"><p>A <a href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\"><code>ConstToken</code></a> for this type of flag.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_all\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#577\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.is_all\" class=\"fn\">is_all</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if all flags are set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#583\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if no flag is set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#589\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.len\" class=\"fn\">len</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of flags set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exactly_one\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#597\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.exactly_one\" class=\"fn\">exactly_one</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>If exactly one flag is set, the flag is returned. Otherwise, returns <code>None</code>.</p>\n<p>See also <a href=\"https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.exactly_one\"><code>Itertools::exactly_one</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bits\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#623\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.bits\" class=\"fn\">bits</a>(self) -&gt; &lt;T as RawBitFlags&gt;::Numeric</h4></section></summary><div class=\"docblock\"><p>Returns the underlying bitwise value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy)]\n</span><span class=\"kw\">enum </span>Flags {\n    Foo = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Bar = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n}\n\n<span class=\"kw\">let </span>both_flags = Flags::Foo | Flags::Bar;\n<span class=\"macro\">assert_eq!</span>(both_flags.bits(), <span class=\"number\">0b11</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersects\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#629\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.intersects\" class=\"fn\">intersects</a>&lt;B&gt;(self, other: B) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a><span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Returns true if at least one flag is shared.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#635\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.contains\" class=\"fn\">contains</a>&lt;B&gt;(self, other: B) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a><span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Returns true if all flags are contained.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#642\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.toggle\" class=\"fn\">toggle</a>&lt;B&gt;(&amp;mut self, other: B)<span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Toggles the matching bits</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#648\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.insert\" class=\"fn\">insert</a>&lt;B&gt;(&amp;mut self, other: B)<span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Inserts the flags into the BitFlag</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#654\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.remove\" class=\"fn\">remove</a>&lt;B&gt;(&amp;mut self, other: B)<span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Removes the matching flags</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#660\">source</a><h4 class=\"code-header\">pub fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.iter\" class=\"fn\">iter</a>(self) -&gt; <a class=\"struct\" href=\"enumflags2/struct.Iter.html\" title=\"struct enumflags2::Iter\">Iter</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator that yields each set flag</p>\n</div></details></div></details>",0,"query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitFlags%3CT,+u8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><a href=\"#impl-BitFlags%3CT,+u8%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits_unchecked_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits_unchecked_c\" class=\"fn\">from_bits_unchecked_c</a>(\n    val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>,\n    const_token: <a class=\"struct\" href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\">ConstToken</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new BitFlags unsafely, without checking if the bits form\na valid bit pattern for the type.</p>\n<p>Const variant of\n<a href=\"enumflags2/struct.BitFlags.html#method.from_bits_unchecked\" title=\"associated function enumflags2::BitFlags::from_bits_unchecked\"><code>from_bits_unchecked</code></a>.</p>\n<p>Consider using\n<a href=\"enumflags2/struct.BitFlags.html#method.from_bits_truncate_c\" title=\"associated function enumflags2::BitFlags::from_bits_truncate_c\"><code>from_bits_truncate_c</code></a> instead.</p>\n<h5 id=\"safety\"><a href=\"#safety\">Safety</a></h5>\n<p>All bits set in <code>val</code> must correspond to a value of the enum.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits_truncate_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.from_bits_truncate_c\" class=\"fn\">from_bits_truncate_c</a>(\n    bits: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>,\n    const_token: <a class=\"struct\" href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\">ConstToken</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>BitFlags&lt;T&gt;</code> from an underlying bitwise value. If any\ninvalid bits are set, ignore them.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy, Debug, PartialEq, Eq)]\n</span><span class=\"kw\">enum </span>MyFlag {\n    One = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Two = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n    Three = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">2</span>,\n}\n\n<span class=\"kw\">const </span>FLAGS: BitFlags&lt;MyFlag&gt; =\n    BitFlags::&lt;MyFlag&gt;::from_bits_truncate_c(<span class=\"number\">0b10101010</span>, BitFlags::CONST_TOKEN);\n<span class=\"macro\">assert_eq!</span>(FLAGS, MyFlag::Two);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.union_c\" class=\"fn\">union_c</a>(self, other: <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Bitwise OR โ return value contains flag if either argument does.</p>\n<p>Also available as <code>a | b</code>, but operator overloads are not usable\nin <code>const fn</code>s at the moment.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.intersection_c\" class=\"fn\">intersection_c</a>(self, other: <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Bitwise AND โ return value contains flag if both arguments do.</p>\n<p>Also available as <code>a &amp; b</code>, but operator overloads are not usable\nin <code>const fn</code>s at the moment.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.not_c\" class=\"fn\">not_c</a>(self, const_token: <a class=\"struct\" href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\">ConstToken</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Bitwise NOT โ return value contains flag if argument doesnโt.</p>\n<p>Also available as <code>!a</code>, but operator overloads are not usable\nin <code>const fn</code>s at the moment.</p>\n<p>Moreover, due to <code>const fn</code> limitations, <code>not_c</code> needs a\n<a href=\"enumflags2/struct.ConstToken.html\" title=\"struct enumflags2::ConstToken\"><code>ConstToken</code></a> as an argument.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[bitflags]\n#[repr(u8)]\n#[derive(Clone, Copy, Debug, PartialEq, Eq)]\n</span><span class=\"kw\">enum </span>MyFlag {\n    One = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">0</span>,\n    Two = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">1</span>,\n    Three = <span class=\"number\">1 </span>&lt;&lt; <span class=\"number\">2</span>,\n}\n\n<span class=\"kw\">const </span>FLAGS: BitFlags&lt;MyFlag&gt; = <span class=\"macro\">make_bitflags!</span>(MyFlag::{One | Two});\n<span class=\"kw\">const </span>NEGATED: BitFlags&lt;MyFlag&gt; = FLAGS.not_c(BitFlags::CONST_TOKEN);\n<span class=\"macro\">assert_eq!</span>(NEGATED, MyFlag::Three);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bits_c\" class=\"method\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#723-850\">source</a><h4 class=\"code-header\">pub const fn <a href=\"enumflags2/struct.BitFlags.html#tymethod.bits_c\" class=\"fn\">bits_c</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns the underlying bitwise value.</p>\n<p><code>const</code> variant of <a href=\"enumflags2/struct.BitFlags.html#method.bits\" title=\"method enumflags2::BitFlags::bits\"><code>bits</code></a>.</p>\n</div></details></div></details>",0,"query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#46-49\">source</a><a href=\"#impl-Binary-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#51\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#877-880\">source</a><a href=\"#impl-BitOr%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#884\">source</a><a href=\"#method.bitor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: B) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<B>","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#76-79\">source</a><a href=\"#impl-UpperHex-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#81\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#977-980\">source</a><a href=\"#impl-Extend%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#983-985\">source</a><a href=\"#method.extend\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, it: I)<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = B&gt;,</span></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.75.0/src/core/iter/traits/collect.rs.html#376\">source</a><a href=\"#method.extend_one\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.75.0/src/core/iter/traits/collect.rs.html#384\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<B>","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#930-933\">source</a><a href=\"#impl-BitAndAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#936\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: B)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<B>","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#420-422\">source</a><a href=\"#impl-Default-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"docblock\"><p>The default value returned is one with all flags unset, i. e. <a href=\"enumflags2/struct.BitFlags.html#method.empty\" title=\"associated function enumflags2::BitFlags::empty\"><code>empty</code></a>,\nunless <a href=\"index.html#customizing-default\">customized</a>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#425\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the โdefault valueโ for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#667\">source</a><a href=\"#impl-IntoIterator-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"enumflags2/struct.Iter.html\" title=\"struct enumflags2::Iter\">Iter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#671\">source</a><a href=\"#method.into_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#951-953\">source</a><a href=\"#impl-Not-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#957\">source</a><a href=\"#method.not\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#891-894\">source</a><a href=\"#impl-BitAnd%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#898\">source</a><a href=\"#method.bitand\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: B) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<B>","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#1013-1016\">source</a><a href=\"#impl-Serialize-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#1018\">source</a><a href=\"#method.serialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    s: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#919-922\">source</a><a href=\"#impl-BitOrAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#925\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: B)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<B>","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu8%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu8%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u8>","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu128%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu128%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u128>","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu16%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu16%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u16>","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu64%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu64%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u64>","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu32%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#impl-TryFrom%3Cu32%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>&lt;Numeric = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"enumflags2/fallible/struct.FromBitsError.html\" title=\"struct enumflags2::fallible::FromBitsError\">FromBitsError</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/fallible.rs.html#8-19\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bits: &lt;T as RawBitFlags&gt;::Numeric\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u32>","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#433\">source</a><a href=\"#impl-From%3CT%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#435\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<T>","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#940-943\">source</a><a href=\"#impl-BitXorAssign%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#946\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: B)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<B>","query_engine::features::EnabledFeatures"],["<section id=\"impl-Copy-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#impl-Copy-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</span></h3></section>","Copy","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#905-908\">source</a><a href=\"#impl-BitXor%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#912\">source</a><a href=\"#method.bitxor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: B) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<B>","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#852\">source</a><a href=\"#impl-PartialEq-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#854\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CT%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#867-869\">source</a><a href=\"#impl-PartialEq%3CT%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;T&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#872\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<T>","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#56-59\">source</a><a href=\"#impl-Octal-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#61\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#37-39\">source</a><a href=\"#impl-Display-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#41\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#66-69\">source</a><a href=\"#impl-LowerHex-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#71\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","query_engine::features::EnabledFeatures"],["<section id=\"impl-Eq-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#impl-Eq-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</span></h3></section>","Eq","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#4-6\">source</a><a href=\"#impl-Debug-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/formatting.rs.html#8\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'a%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#997-1000\">source</a><a href=\"#impl-Deserialize%3C'a%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'a&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    &lt;T as RawBitFlags&gt;::Numeric: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#1002\">source</a><a href=\"#method.deserialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(d: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'a&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'a>","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#impl-Clone-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#860\">source</a><a href=\"#impl-Hash-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#862\">source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","query_engine::features::EnabledFeatures"],["<section id=\"impl-StructuralEq-for-BitFlags%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#376\">source</a><a href=\"#impl-StructuralEq-for-BitFlags%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T, N&gt;</h3></section>","StructuralEq","query_engine::features::EnabledFeatures"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CB%3E-for-BitFlags%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#962-965\">source</a><a href=\"#impl-FromIterator%3CB%3E-for-BitFlags%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"enumflags2/trait.BitFlag.html\" title=\"trait enumflags2::BitFlag\">BitFlag</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/enumflags2/lib.rs.html#968-970\">source</a><a href=\"#method.from_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(it: I) -&gt; <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = B&gt;,</span></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<B>","query_engine::features::EnabledFeatures"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()